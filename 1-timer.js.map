{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = null;\nconst startButton = document.querySelector('button[data-start]');\nconst daysField = document.querySelector('span[data-days]');\nconst hoursField = document.querySelector('span[data-hours]');\nconst minutesField = document.querySelector('span[data-minutes]');\nconst secondsField = document.querySelector('span[data-seconds]');\n\nsetup();\n\nfunction setup() {\n  // button initially disabled\n  startButton.disabled = true;\n\n  // setup flatpickr\n  flatpickr('#datetime-picker', {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      userSelectedDate = selectedDates[0];\n      console.log(userSelectedDate);\n\n      updateStartButton();\n      if (isDateInPast(userSelectedDate)) {\n        showInvalidDateMessage();\n      }\n    },\n  });\n\n  // setup start button\n  startButton.addEventListener('click', event => {\n    // check again in case date is became invalid at this moment\n    if (isDateInPast(userSelectedDate)) {\n      showInvalidDateMessage();\n      return;\n    }\n\n    // update UI immediately\n    let timeLeft = calculateMsLeftToSelectedDate();\n    updateTimeLeftUI(convertMs(timeLeft));\n\n    // start updating UI every second\n    startTimer();\n  });\n}\n\nfunction updateStartButton() {\n  startButton.disabled = isDateInPast(userSelectedDate);\n}\n\nfunction isDateInPast(date) {\n  if (!date) {\n    return false;\n  }\n\n  const now = new Date();\n  return now > date;\n}\n\nfunction startTimer() {\n  // TODO make UI disabled\n\n  const intervalId = setInterval(() => {\n    let timeLeft = calculateMsLeftToSelectedDate();\n\n    if (timeLeft <= 0) {\n      // just for case, to avoid negative left\n      timeLeft = 0;\n\n      // we're done with timer, no need for more iterations\n      clearInterval(intervalId);\n\n      // TODO make UI enabled\n    }\n\n    updateTimeLeftUI(convertMs(timeLeft));\n  }, 1000);\n}\n\nfunction calculateMsLeftToSelectedDate() {\n  const nowMs = Date.now();\n  const targetMs = userSelectedDate.getTime();\n\n  return targetMs - nowMs;\n}\n\nfunction updateTimeLeftUI({ days, hours, minutes, seconds }) {\n  // TODO remove\n  console.log(\n    `Days ${days}, Hours ${hours}, Minutes ${minutes}, Seconds ${seconds}`\n  );\n\n  // TODO better formatting\n  daysField.textContent = days;\n  hoursField.textContent = hours;\n  minutesField.textContent = minutes;\n  secondsField.textContent = seconds;\n}\n\nfunction showInvalidDateMessage() {\n  iziToast.show({\n    message: 'Please choose a date in the future',\n  });\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","startButton","daysField","hoursField","minutesField","secondsField","setup","flatpickr","selectedDates","updateStartButton","isDateInPast","showInvalidDateMessage","event","timeLeft","calculateMsLeftToSelectedDate","updateTimeLeftUI","convertMs","startTimer","date","intervalId","nowMs","days","hours","minutes","seconds","iziToast","ms"],"mappings":"+IAKA,IAAIA,EAAmB,KACvB,MAAMC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAY,SAAS,cAAc,iBAAiB,EACpDC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAe,SAAS,cAAc,oBAAoB,EAC1DC,EAAe,SAAS,cAAc,oBAAoB,EAEhEC,IAEA,SAASA,GAAQ,CAEfL,EAAY,SAAW,GAGvBM,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBR,EAAmBQ,EAAc,CAAC,EAClC,QAAQ,IAAIR,CAAgB,EAE5BS,IACIC,EAAaV,CAAgB,GAC/BW,GAEH,CACL,CAAG,EAGDV,EAAY,iBAAiB,QAASW,GAAS,CAE7C,GAAIF,EAAaV,CAAgB,EAAG,CAClCW,IACA,MACD,CAGD,IAAIE,EAAWC,IACfC,EAAiBC,EAAUH,CAAQ,CAAC,EAGpCI,GACJ,CAAG,CACH,CAEA,SAASR,GAAoB,CAC3BR,EAAY,SAAWS,EAAaV,CAAgB,CACtD,CAEA,SAASU,EAAaQ,EAAM,CAC1B,OAAKA,EAIO,IAAI,KACHA,EAJJ,EAKX,CAEA,SAASD,GAAa,CAGpB,MAAME,EAAa,YAAY,IAAM,CACnC,IAAIN,EAAWC,IAEXD,GAAY,IAEdA,EAAW,EAGX,cAAcM,CAAU,GAK1BJ,EAAiBC,EAAUH,CAAQ,CAAC,CACrC,EAAE,GAAI,CACT,CAEA,SAASC,GAAgC,CACvC,MAAMM,EAAQ,KAAK,MAGnB,OAFiBpB,EAAiB,UAEhBoB,CACpB,CAEA,SAASL,EAAiB,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAE3D,QAAQ,IACN,QAAQH,CAAI,WAAWC,CAAK,aAAaC,CAAO,aAAaC,CAAO,EACxE,EAGEtB,EAAU,YAAcmB,EACxBlB,EAAW,YAAcmB,EACzBlB,EAAa,YAAcmB,EAC3BlB,EAAa,YAAcmB,CAC7B,CAEA,SAASb,GAAyB,CAChCc,EAAS,KAAK,CACZ,QAAS,oCACb,CAAG,CACH,CAEA,SAAST,EAAUU,EAAI,CAQrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAE1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EAEpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EAEjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}